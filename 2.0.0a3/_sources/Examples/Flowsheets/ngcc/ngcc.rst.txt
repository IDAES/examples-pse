NGCC Baseline and Turndown
==========================

This notebook runs a series of net electric power outputs from 650 MW to
160 MW (about 100% to 25%) for an NGCC with 97% CO2 capture. The NGCC
model is based on the NETL report “Cost and Performance Baseline for
Fossil Energy Plants Volume 1: Bituminous Coal and Natural Gas to
Electricity.” Sept 2019, Case B31B
(https://www.netl.doe.gov/projects/files/CostAndPerformanceBaselineForFossilEnergyPlantsVol1BitumCoalAndNGtoElectBBRRev4-1_092419.pdf).

Imports
-------

Import the modules that will be used.

.. code:: ipython3

    import os
    import numpy as np
    import pandas as pd
    from IPython.core.display import SVG
    import pyomo.environ as pyo
    import idaes
    from idaes.core.solvers import use_idaes_solver_configuration_defaults
    import idaes.core.util.scaling as iscale
    import idaes.core.util as iutil
    import ngcc
    import pytest

Make Output Directories
-----------------------

This notebook can produce a large number of output files. To make it
easier to manage, some subdirectories are used to organize output. This
ensures that the directories exist.

.. code:: ipython3

    def make_directory(path):
        """Make a directory if it doesn't exist"""
        try:
            os.mkdir(path)
        except FileExistsError:
            pass
        
    make_directory("data")
    make_directory("data_pfds")
    make_directory("data_tabulated")

Global Solver Settings
----------------------

Use the IDAES configuration system for solver settings. These will apply
to all Ipopt instances created, including the ones created in
initialization methods.

.. code:: ipython3

    use_idaes_solver_configuration_defaults()
    idaes.cfg.ipopt.options.nlp_scaling_method = "user-scaling"
    idaes.cfg.ipopt.options.linear_solver = "ma57"
    idaes.cfg.ipopt.options.OF_ma57_automatic_scaling = "yes"
    idaes.cfg.ipopt.options.ma57_pivtol = 1e-5
    idaes.cfg.ipopt.options.ma57_pivtolmax = 0.1
    solver = pyo.SolverFactory("ipopt")

Create the NGCC model
---------------------

Create the NGCC model and initialize it or read the saved initialization
if available. The base initialized NGCC model is configured to match the
baseline report with 90% capture using a Cansolv system.

.. code:: ipython3

    m = pyo.ConcreteModel()
    m.fs = ngcc.NgccFlowsheet(default={"dynamic":False})
    iscale.calculate_scaling_factors(m)
    m.fs.initialize(
        load_from="ngcc_init.json.gz",
        save_to="ngcc_init.json.gz",
    )
    res = solver.solve(m, tee=True)


.. parsed-literal::

    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/ipykernel_2719/3471148100.py:2)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/ngcc.py:152)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:94)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:98)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:102)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:107)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:113)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:116)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:119)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:123)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:130)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:137)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:144)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:151)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:158)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:165)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:173)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:179)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:187)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:195)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:203)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:211)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:219)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:227)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:236)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:244)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:252)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:259)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/gas_turbine.py:266)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/ngcc.py:159)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:85)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:96)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:110)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:119)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:123)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:132)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:141)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:149)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:156)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:170)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:174)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:180)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:187)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:201)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:208)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:222)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:231)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:245)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:254)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:261)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:275)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:289)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:303)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:317)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:331)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:345)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:359)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:366)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:375)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:389)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:403)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/hrsg.py:417)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/ngcc.py:166)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:61)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:73)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:81)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:88)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:92)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:105)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:113)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:116)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/steam_turbine.py:124)
    WARNING: DEPRECATED: The default argument for the ProcessBlock class is
        deprecated. Arguments can now be passed directly as keyword arguments.
        (called from /tmp/tmptgyg6x8d/ngcc.py:175)
    2022-09-13 00:27:08 [INFO] idaes.init.fs: NGCC load initial from ngcc_init.json.gz
    Ipopt 3.13.2: nlp_scaling_method=user-scaling
    tol=1e-06
    linear_solver=ma57
    ma57_pivtol=1e-05
    ma57_pivtolmax=0.1
    option_file_name=/tmp/tmptai8zu4k_ipopt.opt
    
    Using option file "/tmp/tmptai8zu4k_ipopt.opt".
    
    
    ******************************************************************************
    This program contains Ipopt, a library for large-scale nonlinear optimization.
     Ipopt is released as open source code under the Eclipse Public License (EPL).
             For more information visit http://projects.coin-or.org/Ipopt
    
    This version of Ipopt was compiled from source code available at
        https://github.com/IDAES/Ipopt as part of the Institute for the Design of
        Advanced Energy Systems Process Systems Engineering Framework (IDAES PSE
        Framework) Copyright (c) 2018-2019. See https://github.com/IDAES/idaes-pse.
    
    This version of Ipopt was compiled using HSL, a collection of Fortran codes
        for large-scale scientific computation.  All technical papers, sales and
        publicity material resulting from use of the HSL codes within IPOPT must
        contain the following acknowledgement:
            HSL, a collection of Fortran codes for large-scale scientific
            computation. See http://www.hsl.rl.ac.uk.
    ******************************************************************************
    
    This is Ipopt version 3.13.2, running with linear solver ma57.
    
    Number of nonzeros in equality constraint Jacobian...:     7661
    Number of nonzeros in inequality constraint Jacobian.:        0
    Number of nonzeros in Lagrangian Hessian.............:     5310
    
    Total number of variables............................:     2404
                         variables with only lower bounds:       87
                    variables with lower and upper bounds:     1447
                         variables with only upper bounds:        0
    Total number of equality constraints.................:     2404
    Total number of inequality constraints...............:        0
            inequality constraints with only lower bounds:        0
       inequality constraints with lower and upper bounds:        0
            inequality constraints with only upper bounds:        0
    
    iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
       0  0.0000000e+00 3.50e+01 1.00e+00  -1.0 0.00e+00    -  0.00e+00 0.00e+00   0
    Reallocating memory for MA57: lfact (111440)
       1  0.0000000e+00 3.49e-01 1.12e+04  -1.0 3.06e+03    -  9.90e-01 9.90e-01h  1
       2  0.0000000e+00 3.15e-03 5.14e+02  -1.0 3.02e+03    -  9.89e-01 9.91e-01h  1
       3  0.0000000e+00 1.14e-06 9.98e+02  -1.0 3.73e+01    -  9.90e-01 1.00e+00h  1
       4  0.0000000e+00 2.36e-11 8.92e+03  -1.0 7.71e-04    -  9.90e-01 1.00e+00h  1
    
    Number of Iterations....: 4
    
                                       (scaled)                 (unscaled)
    Objective...............:   0.0000000000000000e+00    0.0000000000000000e+00
    Dual infeasibility......:   0.0000000000000000e+00    0.0000000000000000e+00
    Constraint violation....:   2.3646862246096134e-11    2.3646862246096134e-11
    Complementarity.........:   0.0000000000000000e+00    0.0000000000000000e+00
    Overall NLP error.......:   2.3646862246096134e-11    2.3646862246096134e-11
    
    
    Number of objective function evaluations             = 5
    Number of objective gradient evaluations             = 5
    Number of equality constraint evaluations            = 5
    Number of inequality constraint evaluations          = 0
    Number of equality constraint Jacobian evaluations   = 5
    Number of inequality constraint Jacobian evaluations = 0
    Number of Lagrangian Hessian evaluations             = 4
    Total CPU secs in IPOPT (w/o function evaluations)   =      0.242
    Total CPU secs in NLP function evaluations           =      1.983
    
    EXIT: Optimal Solution Found.


Show PFDs with baseline results
-------------------------------

This displays PFDs in the notebook, and saves them to files. The full
NGCC model is too big to show well in a single PFD, so it is broken into
the three main sections, gas turbine, heat recovery steam generator
(HRSG), and steam turbine.

.. code:: ipython3

    def display_pfd():
        print("\n\nGas Trubine Section\n")
        display(SVG(m.fs.gt.write_pfd()))
        print("\n\nHRSG Section\n")
        display(SVG(m.fs.hrsg.write_pfd()))
        print("\n\nSteam Turbine Section\n")
        display(SVG(m.fs.st.write_pfd()))
    
    display_pfd()
    
    m.fs.gt.write_pfd(fname="data_pfds/gt_baseline.svg")
    m.fs.hrsg.write_pfd(fname="data_pfds/hrsg_baseline.svg")
    m.fs.st.write_pfd(fname="data_pfds/st_baseline.svg")


.. parsed-literal::

    
    
    Gas Trubine Section
    



.. image:: output_10_1.svg


.. parsed-literal::

    
    
    HRSG Section
    



.. image:: output_10_3.svg


.. parsed-literal::

    
    
    Steam Turbine Section
    



.. image:: output_10_5.svg


Test key model outputs against NETL baseline
--------------------------------------------

.. code:: ipython3

    #Assert results approximatly agree with baseline reoprt
    assert pyo.value(m.fs.net_power_mw[0]) == pytest.approx(646)
    assert pyo.value(m.fs.gross_power[0]) == pytest.approx(-690e6, rel=0.001)
    assert pyo.value(100*m.fs.lhv_efficiency[0]) == pytest.approx(52.8, abs=0.1)
    assert pyo.value(m.fs.total_variable_cost_rate[0]/m.fs.net_power_mw[0]) == pytest.approx(37.2799, rel=0.01)
    assert pyo.value(m.fs.fuel_cost_rate[0]/m.fs.net_power_mw[0]) == pytest.approx(31.6462, rel=0.01)
    assert pyo.value(m.fs.other_variable_cost_rate[0]/m.fs.net_power_mw[0]) == pytest.approx(5.63373, rel=0.01)
    assert pyo.value(m.fs.gt.gt_power[0]) == pytest.approx(-477e6, rel=0.001)

Run turndown cases 5 MW interval
--------------------------------

Here we set the CO2 capture rate to 97% and set the specific reboiler
duty to PZ advanced solvent system. The minimum power is 160 MW net,
which corresponds to a bit under 25%. This is roughly the minimum load
for the NGCC modeled. Results are tabulated for tags in the tags_output
tag group in a Pandas data frame.

To run the series, change run_series to True. Running the turndown
series takes a while, unless previous saved results are available.

.. code:: ipython3

    run_series=False
    if run_series:
        idaes.cfg.ipopt.options.tol = 1e-6
        idaes.cfg.ipopt.options.max_iter = 50
        solver = pyo.SolverFactory("ipopt")
    
        m.fs.cap_specific_reboiler_duty.fix(2.4e6)
        m.fs.cap_fraction.fix(0.97)
        powers = np.linspace(650, 160, int((650 - 160)/5) + 1)
        powers = list(powers)
        powers.insert(1, 646)
    
        df = pd.DataFrame(columns=m.fs.tags_output.table_heading())
    
        for p in powers:
            print(p)
            fname = f"data/ngcc_{int(p)}.json.gz"
            if os.path.exists(fname):
                iutil.from_json(m, fname=fname, wts=iutil.StoreSpec(suffix=False))
            else:
                m.fs.net_power_mw.fix(p)
                res = solver.solve(m, tee=True, symbolic_solver_labels=True)
                if not pyo.check_optimal_termination(res):
                    break
                iutil.to_json(m, fname=fname)
            df.loc[m.fs.tags_output["net_power"].value] = m.fs.tags_output.table_row(numeric=True)
            if abs(p - 650) < 0.1:
                m.fs.gt.streams_dataframe().to_csv("data_tabulated/ngcc_stream_650mw_gt.csv")
                m.fs.st.steam_streams_dataframe().to_csv("data_tabulated/ngcc_stream_650mw_st.csv")
                m.fs.hrsg.steam_streams_dataframe().to_csv("data_tabulated/ngcc_stream_650mw_hrsg_steam.csv")
                m.fs.hrsg.flue_gas_streams_dataframe().to_csv("data_tabulated/ngcc_stream_650mw_hrsg_gas.csv")
        df.to_csv("data_tabulated/ngcc.csv")
        df

