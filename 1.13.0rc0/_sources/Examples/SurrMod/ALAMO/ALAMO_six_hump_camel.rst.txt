.. code:: ipython3

    from idaes.surrogate import alamopy_depr as alamopy
    import examples
    import pyomo.environ as pyo
    from pyomo.common.errors import ApplicationError
    from pyomo.opt import SolverStatus, TerminationCondition
    import camel6

.. code:: ipython3

    alamo_ran = camel6.main()

.. code:: ipython3

    hasBaron = False
    try:
        solver_opt = pyo.SolverFactory('baron')
        hasBaron = solver_opt.available()
    except ApplicationError as err:
        print("Partial test completed. %s"%err)
    
    
    if alamo_ran and hasBaron:
        model = pyo.ConcreteModel()
        opt = pyo.SolverFactory('baron')
        model.x1 = pyo.Var()
        model.x2 = pyo.Var()
        def pyomo_model(model):
            import z1
            return z1.f(model.x1,model.x2)
        model.obj = pyo.Objective(rule = pyomo_model)
        results = opt.solve(model)
        if ((results.solver.status == SolverStatus.ok) and
           (results.solver.termination_condition == TerminationCondition.optimal)):
            model.solutions.store_to(results)
        print(results)

