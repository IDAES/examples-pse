name: Run examples

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  examples:
    name: Build examples (py${{ matrix.python-version }}/${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      # if fail-fast == true (the default), jobs for the remaining values in the matrix are cancelled
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
        os:
          - ubuntu-18.04
          - windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install own dependencies
      run: |
        echo $PWD
        ls -lh .
        python -m pip install --progress-bar=off setuptools pip wheel
        python -m pip install --progress-bar=off -r requirements.txt
    - name: Install IDAES
      run: |
        python -m pip install --progress-bar=off git+https://github.com/idaes/idaes-pse
        idaes --version
    - name: Install IDAES extensions
      run: |
        idaes get-extensions --verbose
        # NOTE: these commands are Unix-shell specific 
        # and will need to be changed if we want to test on CMD.exe/Powershell
        find $(idaes data-directory) -ls
        # add bin directory to $PATH (only valid for subsequent steps)
        echo "$(idaes bin-directory)" >> $GITHUB_PATH
    - name: Test access to executables
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
            ipopt.exe -v
        else
            ipopt -v
        fi
    - name: Run pytest (unit)
      run: |
        pytest --verbose -m unit tests/
    - name: Run pytest (not unit, including running notebooks)
      run: |
        pytest --verbose -m 'not unit' tests/
    - name: Save build error logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-error-logs
        path: ci-test-errors.txt
  build-examples-docs:
    name: Build examples docs (py${{ matrix.python-version }})
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and set up environment
      run: |
        python -m pip install --progress-bar=off setuptools pip wheel
        python -m pip install --progress-bar=off -r requirements.txt
        python -m pip install --progress-bar=off git+https://github.com/idaes/idaes-pse
        idaes --version
        idaes get-extensions --verbose
        # add bin directory to $PATH (only valid for subsequent steps)
        echo "$(idaes bin-directory)" >> $GITHUB_PATH
        sudo apt-get install --quiet --yes pandoc
    - name: Check installed versions
      run: |
        idaes --version
        ipopt -v
        pandoc --version
    - name: Build notebook index
      run: |
        python build.py -v --config ./build-ci.yml -x
    - name: Convert notebooks and build docs
      run: |
        # copy 'docs/conf.py' to 'docs_test/' to avoid Sphinx errors because it's missing if build.ci.yml is used
        python build.py -v --config ./build-ci.yml -cd
    - name: Save Sphinx build error logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: sphinx-error-logs
        path: sphinx-errors.txt
